<?xml version="1.0" encoding="UTF-8"?>
<otrunk id="678b5190-0bcf-012a-b542-0017f2cc694e">
	<imports>
		<import class="org.concord.data.state.OTDataStore"/>
		<import class="org.concord.data.state.OTDataChannelDescription"/>
		<import class="org.concord.data.state.OTDataField"/>
		<import class="org.concord.datagraph.state.OTDataGraph"/>
		<import class="org.concord.datagraph.state.OTDataAxis"/>
		<import class="org.concord.datagraph.state.OTDataGraphable"/>
		<import class="org.concord.datagraph.state.OTDataCollector"/>
		<import class="org.concord.datagraph.state.OTMultiDataGraph"/>
		<import class="org.concord.datagraph.state.OTPluginView"/>
		<import class="org.concord.framework.otrunk.view.OTFrame"/>
		<import class="org.concord.graph.util.state.OTDrawingTool"/>
		<import class="org.concord.graph.util.state.OTDrawingStamp"/>
		<import class="org.concord.graph.util.state.OTDrawingImageIcon"/>
		<import class="org.concord.graph.util.state.OTDrawingShape"/>
		<import class="org.concord.graph.util.state.OTDrawingTool2"/>
		<import class="org.concord.graph.util.state.OTPointTextLabel"/>
		<import class="org.concord.otrunk.OTSystem"/>
		<import class="org.concord.otrunk.overlay.OTOverlay"/>
		<import class="org.concord.otrunk.script.ui.OTScriptObject"/>
		<import class="org.concord.otrunk.script.ui.OTScriptVariable"/>
		<import class="org.concord.otrunk.script.ui.OTScriptVariableComponent"/>
		<import class="org.concord.otrunk.script.js.OTJavascript"/>
		<import class="org.concord.otrunk.script.OTScriptEngineBundle"/>
		<import class="org.concord.otrunk.script.OTScriptEngineEntry"/>
		<import class="org.concord.otrunk.udl.OTUDLCharacter"/>
		<import class="org.concord.otrunk.udl.OTUDLCharacterGroup"/>
		<import class="org.concord.otrunk.udl.OTUDLCoachStatement"/>
		<import class="org.concord.otrunk.udl.OTUDLMenuRule"/>
		<import class="org.concord.otrunk.udl.document.OTDefinition"/>
		<import class="org.concord.otrunk.udl.document.OTDefinitionManager"/>
		<import class="org.concord.otrunk.udl.document.OTUDLCompoundDoc"/>
		<import class="org.concord.otrunk.udl.document.OTUDLCSSModifier"/>
		<import class="org.concord.otrunk.udl.document.OTUDLCSSGroup"/>
		<import class="org.concord.otrunk.udl.document.OTUDLDocumentViewConfig"/>
		<import class="org.concord.otrunk.udl.friction.OTFrictionModel" />
		<import class="org.concord.otrunk.udl3.OTQuestion"/>
		<import class="org.concord.otrunk.udl3.OTUDLMenu"/>
		<import class="org.concord.otrunk.udl3.OTUDLContainer"/>
		<import class="org.concord.otrunk.udl3.OTUDLQuestions" />
		<import class="org.concord.otrunk.udl3.OTUDLQuestionViewConfig" />
		<import class="org.concord.otrunk.udl3.OTUDLSection"/>
		<import class="org.concord.otrunk.ui.OTButton"/>
		<import class="org.concord.otrunk.ui.OTCardContainer"/>
		<import class="org.concord.otrunk.ui.OTChoice"/>
		<import class="org.concord.otrunk.ui.OTImage"/>
		<import class="org.concord.otrunk.ui.OTText"/>
		<import class="org.concord.otrunk.ui.snapshot.OTSnapshot"/>
		<import class="org.concord.otrunk.ui.snapshot.OTSnapshotButton"/>
		<import class="org.concord.otrunk.ui.snapshot.OTSnapshotAlbum"/>
		<import class="org.concord.otrunk.ui.swing.OTChoiceViewConfig"/>
		<import class="org.concord.otrunk.view.OTObjectEditViewConfig"/>
		<import class="org.concord.otrunk.view.OTViewChild"/>
		<import class="org.concord.otrunk.view.OTViewEntry"/>
		<import class="org.concord.otrunk.view.OTViewMode" />
		<import class="org.concord.otrunk.view.OTViewBundle"/>
		<import class="org.concord.otrunk.view.document.OTCompoundDoc"/>
		<import class="org.concord.otrunk.view.document.OTCssText"/>
		<import class="org.concord.otrunk.view.prototype.OTPrototypeViewEntry"/>
	    <import class="org.concord.otrunk.view.prototype.OTPrototypeEventController"/>
	    <import class="org.concord.otrunk.view.prototype.OTPrototypeMapEntry"/>
	    <import class="org.concord.sensor.state.OTDeviceConfig"/>
		<import class="org.concord.sensor.state.OTExperimentRequest"/>
		<import class="org.concord.sensor.state.OTInterfaceManager"/>
		<import class="org.concord.sensor.state.OTSensorDataProxy"/>
		<import class="org.concord.sensor.state.OTSensorRequest"/>
		<import class="org.concord.sensor.state.OTZeroSensor"/>
	</imports>
	<objects>
		<OTSystem local_id="system">
			<bundles>
				<OTViewBundle showLeftPanel="false" currentMode="authoring">
					<modes>
						<OTViewMode name="default"/>
						<OTViewMode name="authoring">
							<map>
								<entry key="${menu-horizontal-circle}">
									<OTViewEntry
										objectClass="org.concord.otrunk.udl3.OTUDLMenu" 
										viewClass="org.concord.otrunk.udl.ui.OTUDLMenuPageEditView" />
								</entry>
								<entry key="${compound_doc_view}">
									<OTObjectEditViewConfig 
										objectClass="org.concord.otrunk.view.document.OTCompoundDoc" 
										viewClass="org.concord.otrunk.view.document.OTCompoundDocEditView"
										usePopupEditWindows="true"/>
								</entry>
								
							</map>
						</OTViewMode>
					</modes>
					<frame>
						<OTFrame useScrollPane="false" width="850" height="600"/>
					</frame>
					<views>
						<!-- The OTUDLQuestionViewConfig can be used to set the default scaffolding level, and whether the student can navigate through the levels.
						  The default scaffolding level just uses the order of the items inside OTUDLQuestions/questions. It is not aware of the names
						  such as "L1", "L2", etc. -->
						<OTUDLQuestionViewConfig local_id="questions-card-view" isLevelFrozen="false" defaultScaffoldLevel="0" objectClass="org.concord.otrunk.udl3.OTUDLQuestions" viewClass="org.concord.otrunk.udl3.OTUDLQuestionsCardView" />
						<OTViewEntry objectClass="org.concord.otrunk.ui.OTImage" viewClass="org.concord.otrunk.ui.swing.OTImageView" />
						<OTViewEntry local_id="snapshot_button_view" objectClass="org.concord.otrunk.ui.snapshot.OTSnapshotButton" viewClass="org.concord.otrunk.ui.snapshot.OTSnapshotButtonView"/>
						<OTViewEntry objectClass="org.concord.otrunk.ui.snapshot.OTSnapshotAlbum" viewClass="org.concord.otrunk.ui.snapshot.OTSnapshotAlbumView"/>
						<OTViewEntry objectClass="org.concord.otrunk.udl.friction.OTFrictionModel" viewClass="org.concord.otrunk.udl.friction.OTFrictionModelView" />
						<OTViewEntry objectClass="org.concord.otrunk.ui.OTButton" viewClass="org.concord.otrunk.ui.swing.OTButtonView"/>
						<OTViewEntry objectClass="org.concord.otrunk.script.ui.OTScriptObject" viewClass="org.concord.otrunk.script.ui.OTScriptObjectView"/>
						<OTViewEntry objectClass="org.concord.otrunk.ui.OTButton" viewClass="org.concord.otrunk.ui.swing.OTButtonView"/>
						<OTViewEntry objectClass="org.concord.otrunk.udl3.OTQuestion" viewClass="org.concord.otrunk.udl3.OTQuestionView"/>
						<OTViewEntry objectClass="org.concord.otrunk.udl.OTUDLCharacterGroup" viewClass="org.concord.otrunk.udl.OTUDLCharacterGroupView"/>
						<OTViewEntry objectClass="org.concord.otrunk.udl3.OTUDLSection" viewClass="org.concord.otrunk.udl3.OTUDLSectionView"/>
						<OTViewEntry local_id="container_view" objectClass="org.concord.otrunk.udl3.OTUDLContainer" viewClass="org.concord.otrunk.udl3.OTUDLContainerView"/>
						<OTViewEntry objectClass="org.concord.otrunk.udl.document.OTUDLCSSModifier" viewClass="org.concord.otrunk.udl.document.OTUDLCSSModifierView"/>
						<OTViewEntry local_id="menu-vertical" objectClass="org.concord.otrunk.udl3.OTUDLMenu" viewClass="org.concord.otrunk.udl.ui.OTUDLMenuSectionView"/>
						<OTViewEntry local_id="menu-horizontal-circle" objectClass="org.concord.otrunk.udl3.OTUDLMenu" viewClass="org.concord.otrunk.udl.ui.OTUDLMenuPageView"/>
						<OTViewEntry objectClass="org.concord.otrunk.udl3.OTQuestion" viewClass="org.concord.otrunk.udl3.OTQuestionView"/>
						<OTChoiceViewConfig objectClass="org.concord.otrunk.ui.OTChoice" viewClass="org.concord.otrunk.ui.swing.OTChoiceRadioButtonView" useViewsAsChoices="true" local_id="choice-radio-view"/>
						<OTViewEntry objectClass="org.concord.otrunk.ui.OTChoice"  viewClass="org.concord.otrunk.ui.swing.OTChoiceComboBoxView" local_id="choice-combo-view" />
						<OTViewEntry objectClass="org.concord.otrunk.udl3.OTQuestion" viewClass="org.concord.otrunk.udl3.OTQuestionView"/>
						<OTViewEntry objectClass="org.concord.otrunk.script.ui.OTScriptObject" viewClass="org.concord.otrunk.script.ui.OTScriptObjectView"/>
						<OTViewEntry objectClass="org.concord.otrunk.ui.OTCardContainer" viewClass="org.concord.otrunk.ui.swing.OTCardContainerView"/>
						<OTViewEntry objectClass="org.concord.otrunk.ui.OTBorderContainer" viewClass="org.concord.otrunk.ui.swing.OTBorderContainerView"/>
						<OTViewEntry objectClass="org.concord.otrunk.ui.OTPlacementContainer" viewClass="org.concord.otrunk.ui.swing.OTPlacementContainerView"/>
						<OTViewEntry local_id="text-edit" objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextEditView"/>
						<OTViewEntry local_id="text-label" objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextView"/>
						<OTViewEntry viewClass="org.concord.datagraph.state.OTDataCollectorView" objectClass="org.concord.datagraph.state.OTDataCollector"/>
						<OTViewEntry viewClass="org.concord.datagraph.state.OTDataGraphView" objectClass="org.concord.datagraph.state.OTDataGraph"/>
						<OTViewEntry viewClass="org.concord.data.state.OTDataFieldView" objectClass="org.concord.data.state.OTDataField"/>
						<OTViewEntry viewClass="org.concord.datagraph.state.OTDataDrawingToolView" objectClass="org.concord.graph.util.state.OTDrawingTool"/>
						<OTViewEntry viewClass="org.concord.datagraph.state.OTMultiDataGraphView" objectClass="org.concord.datagraph.state.OTMultiDataGraph"/>
						<OTUDLDocumentViewConfig 
							local_id="compound_doc_view" 
							objectClass="org.concord.otrunk.view.document.OTCompoundDoc" 
							viewClass="org.concord.otrunk.udl.document.OTUDLDocumentView" 
							definitionManager="${definition-manager}">
							<cssBlocks>
								<OTCssText local_id="css-font"
									cssText="
										body {	 
											font-size: 18; 
										}
										a {		 
											text-decoration: none;		
										}
										DIV.body {	 	 	
											FONT-STYLE: normal;		 
											FONT-FAMILY: Verdana, Arial;		 
											FONT-VARIANT: normal;		
											TEXT-DECORATION: none		
										}
										DIV.story {
											FONT-WEIGHT: bolder;
										}
										DIV.activity-title {		 
											font-size: 29;		 
											FONT-WEIGHT: bold;
										}		
										DIV.title {		
											font-size: 30;	 
											FONT-WEIGHT: bold;
										}
										DIV.subtitle {		 
											font-size: 25;		 
											FONT-WEIGHT: bold;
										}"/>
								<OTCssText local_id="css-color"
									cssText="
										body {	 
											BACKGROUND-COLOR: rgb(250, 250, 150); 
										}
										DIV.body {	 	 
											BACKGROUND-COLOR: rgb(250, 255, 255);
										}
										DIV.body-no-border {
											BACKGROUND-COLOR: rgb(250, 255, 255);
										}
										DIV.story {
											BORDER-COLOR: blue;
											BACKGROUND-COLOR: rgb(210,230,255);
											COLOR: rgb(0,0,0);
										}
										DIV.story-border {
											BACKGROUND-COLOR: rgb(100, 130, 200);
										}
										DIV.activity-title {		 
											COLOR: rgb(0,0,0);
										}		
										DIV.title {		
											COLOR: rgb(0,0,0);
										}
										DIV.subtitle {		 
											COLOR: rgb(0,0,0);
										}
										DIV.leftpanel {		
											BACKGROUND-COLOR: rgb(135, 206, 255);
										}
										DIV.buffer {		
											BACKGROUND-COLOR: rgb(250, 250, 150);
										}		
										DIV.border {
											BACKGROUND-COLOR: #FF6600;	 
										}	
										DIV.definition-border {
											BACKGROUND-COLOR: rgb(0, 0, 255);
										} 
										DIV.question { 
											BACKGROUND-COLOR: rgb(230, 230, 250); 
										}
										"/>
								<OTCssText local_id="css-layout"
									cssText="
										DIV.body {	 	 
											 MARGIN: 5px;		 
											 PADDING: 8px;		
											 height: 100%;
										}
										DIV.story {
											 padding: 5px;
										}
										DIV.story-border {
											padding: 1px;
										}
										DIV.activity-title {		 
											MARGIN: 2px 10% 10px;
										}		
										DIV.title {		
											PADDING-BOTTOM: 10px;		 
											PADDING-LEFT: 20px;	
											PADDING-TOP: 10px; 
											MARGIN: 2px 10% 10px;
										}
										DIV.subtitle {		 
											PADDING-BOTTOM: 10px;	 
											PADDING-LEFT: 20px;	
											PADDING-TOP: 10px;	
											MARGIN: 2px 10% 10px;
										}
										DIV.buffer {		
											PADDING: 10px;
										}		
										DIV.border {
											PADDING: 3px; 
										}	
										DIV.definition-border {
											PADDING: 3px;
										}
										DIV.top-menu {
											TEXT-ALIGN: right;
										}"/>
							</cssBlocks>
						</OTUDLDocumentViewConfig>
						<OTPrototypeViewEntry local_id="textsize-choice-view"
			            	objectClass="org.concord.otrunk.OTSystem"
			            	viewClass="org.concord.otrunk.view.prototype.OTPrototypeView"
			            	viewEntry="${choice-combo-view}"
			            	copyPrototype="false">
			            	<prototype>
			            	    <OTChoice>
			            	    	<choices>
			            	    		<OTOverlay name="Small text" local_id="small-text-overlay">
			            	    			<deltaObjectMap>
			            	    				<entry key="${css-font}">
			            	    					<OTCssText
														cssText="
															body {	 
																font-size: 14; 
															}
															a {		 
																text-decoration: none;		
															}
															DIV.body {	 	 
																FONT-WEIGHT: bolder;		
																FONT-STYLE: normal;		 
																FONT-FAMILY: Verdana, Arial;		 
																FONT-VARIANT: normal;		
																TEXT-DECORATION: none		
															}
															DIV.story {
																FONT-WEIGHT: bolder;
															}
															DIV.activity-title {		 
																font-size: 28;		 
																FONT-WEIGHT: bold;
															}		
															DIV.title {		
																font-size: 25;	 
																FONT-WEIGHT: bold;
															}
															DIV.subtitle {		 
																font-size: 20;		 
																FONT-WEIGHT: bold;
															}"/>
			            	    				</entry>
			            	    			</deltaObjectMap>
			            	    		</OTOverlay>
			            	    		<OTOverlay name="Normal text" local_id="normal-text-overlay"/>
			            	    		<OTOverlay name="Large text" local_id="large-text-overlay">
			            	    			<deltaObjectMap>
			            	    				<entry key="${css-font}">
			            	    					<OTCssText
														cssText="
															body {	 
																font-size: 24; 
															}
															a {		 
																text-decoration: none;		
															}
															DIV.body {	 	 
																FONT-WEIGHT: bolder;		
																FONT-STYLE: normal;		 
																FONT-FAMILY: Verdana, Arial;		 
																FONT-VARIANT: normal;		
																TEXT-DECORATION: none		
															}
															DIV.story {
																FONT-WEIGHT: bolder;
															}
															DIV.activity-title {		 
																font-size: 37;		 
																FONT-WEIGHT: bold;
															}		
															DIV.title {		
																font-size: 34;	 
																FONT-WEIGHT: bold;
															}
															DIV.subtitle {		 
																font-size: 28;		 
																FONT-WEIGHT: bold;
															}"/>
			            	    				</entry>
			            	    			</deltaObjectMap>
			            	    		</OTOverlay>
			            	    	</choices>
			            	    </OTChoice>
			            	</prototype>
			            	<controller>
			            	    <!--  turn off the prototype copying so we can test this better -->
			            		<OTPrototypeEventController>
			            			<mapping>
			            			   <OTPrototypeMapEntry 
			            			   		modelProperty="overlays[0]" 
			            			   		prototypeProperty="currentChoice"/>
			            			</mapping>
			            		</OTPrototypeEventController>
			            	</controller>
			            </OTPrototypeViewEntry>
			            <OTPrototypeViewEntry local_id="language-choice-view"
			            	objectClass="org.concord.otrunk.OTSystem"
			            	viewClass="org.concord.otrunk.view.prototype.OTPrototypeView"
			            	viewEntry="${choice-combo-view}"
			            	copyPrototype="false">
			            	<prototype>
			            	    <OTChoice>
			            	    	<choices>
			            	    		<OTOverlay name="English" local_id="english-overlay" />
			            	    		<OTOverlay name="Español" local_id="spanish-overlay">
			            	    			<!-- spanish overlay -->
			            	    		</OTOverlay>
			            	    	</choices>
			            	    </OTChoice>
			            	</prototype>
			            	<controller>
			            	    <!--  turn off the prototype copying so we can test this better -->
			            		<OTPrototypeEventController >
			            			<mapping>
			            			   <OTPrototypeMapEntry 
			            			   		modelProperty="overlays[1]" 
			            			   		prototypeProperty="currentChoice"/>
			            			</mapping>
			            		</OTPrototypeEventController>
			            	</controller>
			            </OTPrototypeViewEntry>
						<OTViewEntry objectClass="org.concord.graph.util.state.OTDrawingTool2" viewClass="org.concord.datagraph.state.OTDataDrawingToolView"/>
					</views>
				</OTViewBundle>
				<OTScriptEngineBundle>
					<engines>
						<OTScriptEngineEntry objectClass="org.concord.otrunk.script.js.OTJavascript" engineClass="org.concord.otrunk.script.js.OTJavascriptEngine"/>
					</engines>
				</OTScriptEngineBundle>
				<OTInterfaceManager>
					<deviceConfigs>
						<OTDeviceConfig configString="none" deviceId="10"/>
					</deviceConfigs>
				</OTInterfaceManager>
			</bundles>
			<overlays>
		        <object refid="${normal-text-overlay}"/>
		        <object refid="${english-overlay}"/>
		    </overlays>
			<root>
				<OTUDLContainer name="UDL Activity">
					<title>
						<OTCompoundDoc local_id="title">
							<bodyText>
								<div class="leftpanel">
									<img src="http://udl.concord.org/share/udl-tree-only.png" width="70" height="73"/>
									<br/>
									<div class="activity-title">
										UDL Activity
									</div>
								</div>
							</bodyText>
						</OTCompoundDoc>
					</title>
					<menu>
						<OTViewChild object="${menu}" useScrollPane="true" scrollPanelHasBorder="false"/>
					</menu>
					<topBar>
						<OTCompoundDoc>
							<bodyText>
								<div class="top-menu">
									<table>
										<tr>
											<td>
												<object refid="${system}" viewid="${language-choice-view}"/>
											</td>
											<td>
												<object refid="${system}" viewid="${textsize-choice-view}"/>
											</td>
										</tr>
									</table>
								</div>
							</bodyText>
						</OTCompoundDoc>
					</topBar>
					<characters>
						<OTUDLCharacterGroup local_id="character-group" topLevelCardContainer="${section-card-container}">
							<characters>
								<OTUDLCharacter local_id="character_affective" inactiveImageURL="http://confluence.concord.org/download/attachments/12353/blah-head-small.png"/>
								<OTUDLCharacter local_id="character_strategic" inactiveImageURL="http://confluence.concord.org/download/attachments/12353/clunk-head-small.png"/>
								<OTUDLCharacter local_id="character_recognition" inactiveImageURL="http://confluence.concord.org/download/attachments/12353/roxy-head-small.png"/>
							</characters>
							<speechFrame>
								<OTFrame local_id="speech_frame" width="380" height="340" borderlessPopup="false"/>
							</speechFrame>
						</OTUDLCharacterGroup>
					</characters>
					<content>
						<OTCardContainer local_id="section-card-container" loadViewOnlyOnDemand="true">
							<cards>
								<OTUDLSection local_id="section_1" name="Section 1">
									<header>
										<OTCompoundDoc>
											<bodyText>
												<div class="title">
													Section 1
												</div>
											</bodyText>
										</OTCompoundDoc>
									</header>
									<content>
										<OTCardContainer local_id="section-1-card-container" contentsMayScroll="true" loadViewOnlyOnDemand="true">
											<cards>
												<OTUDLCompoundDoc local_id="page-1" name="1">
													<bodyText>
														<div class="buffer">
															<div class="border">
																<div class="body">
																	Page 1
																</div>
															</div>
														</div>
													</bodyText>
												</OTUDLCompoundDoc>
											</cards>
											<currentCard>
												<object refid="${page-1}"/>
											</currentCard>
										</OTCardContainer>
									</content>
									<footer>
										<OTCompoundDoc>
											<bodyText>
												<div align="center">
													<table>
														<tr>
															<td>
																<object refid="${section-1-menu}" viewid="${menu-horizontal-circle}"/>
															</td>
														</tr>
													</table>
												</div>
											</bodyText>
										</OTCompoundDoc>
									</footer>
								</OTUDLSection>
							</cards>
							<currentCard>
								<object refid="${section_1}"/>
							</currentCard>
						</OTCardContainer>
					</content>
				</OTUDLContainer>
			</root>
			<library>
				<OTUDLMenu local_id="menu" cardContainer="${section-card-container}" menuRule="${section-rule}"/>
				<OTUDLMenu local_id="section-1-menu" cardContainer="${section-1-card-container}"  menuRule="${page-rule}"/>
				<OTSnapshotAlbum local_id="album"/>
				<OTDefinitionManager local_id="definition-manager">
					<definitions>
						
					</definitions>
					<frame>
						<OTFrame local_id="definition_frame" width="280" height="150" borderlessPopup="true"/>
					</frame>
				</OTDefinitionManager>
				<OTUDLMenuRule local_id="page-rule" jumpToViewedCard="true" stepAhead="true"/>
				<OTUDLMenuRule local_id="section-rule" jumpToAnyCard="true"/>
				<OTJavascript local_id="change_page.js">
					<script>
						importClass(Packages.java.awt.event.ActionListener);
						importClass(Packages.java.util.Vector);
						importClass(Packages.org.concord.otrunk.udl3.OTQuestionList);
						importClass(Packages.org.concord.framework.otrunk.OTObjectList);
						importClass(Packages.javax.swing.JOptionPane);
						
						var numCards;
						var currentcard;
						var passwordfield;

						var buttonHandler =
						{
								actionPerformed: function(evt)
								{
									if (passwordfield != null){
									var passwordAttempt = passwordfield.getText();
									if (passwordAttempt.equalsIgnoreCase(password.getText())){
										cardContainer.setCurrentCard(card);
										return;
									} else {
										JOptionPane.showMessageDialog(null, "Sorry, that's not the correct password.");
										return;
									}
								}
										cardContainer.setCurrentCard(card);
								}
						};
						var buttonListener = new ActionListener(buttonHandler);

						function init() {
							button.addActionListener(buttonListener);

							return true;
						}

						function save() {
							button.removeActionListener(buttonListener);
							return true;
						}
					</script>
				</OTJavascript>
				<OTJavascript local_id="show_message.js">
					<script>
						importClass(Packages.java.awt.event.ActionListener);
						importClass(Packages.java.util.Vector);
						importClass(Packages.org.concord.otrunk.udl3.OTQuestionList);
						importClass(Packages.org.concord.framework.otrunk.OTObjectList);
						importClass(Packages.javax.swing.JOptionPane);

						var buttonHandler =
						{
								actionPerformed: function(evt)
								{
									var messageString = message.getText();
									JOptionPane.showMessageDialog(null, messageString);
								}
						};
						var buttonListener = new ActionListener(buttonHandler);

						function init() {
							button.addActionListener(buttonListener);

							return true;
						}

						function save() {
							button.removeActionListener(buttonListener);
							return true;
						}
					</script>
				</OTJavascript>
			</library>
		</OTSystem>
	</objects>
</otrunk>
